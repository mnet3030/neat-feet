package com.imagine.neatfeat.model.dal.entity;
// Generated Mar 21, 2019 12:44:38 AM by Hibernate Tools 4.3.1


import org.hibernate.annotations.GenericGenerator;

import javax.persistence.Entity;
import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

/**
 * UserOrders generated by hbm2java
 */
@Entity
@Table(name="user_orders"
        ,catalog="\"ecommerce\""
)
public class UserOrders  implements com.imagine.neatfeat.model.dal.entity.Entity {


    private UUID id;
    private User user;
    private Date datePurchased;
    private Set<OrderProducts> orderProductses = new HashSet<OrderProducts>(0);
    private Set<UserReviews> userReviewses = new HashSet<UserReviews>(0);



    private UUID uuid;

    public UserOrders() {
    }


    public UserOrders(UUID id, User user, Date datePurchased) {
        this.id = id;
        this.user = user;
        this.datePurchased = datePurchased;
    }
    public UserOrders(UUID id, User user, Date datePurchased, Set<OrderProducts> orderProductses, Set<UserReviews> userReviewses) {
        this.id = id;
        this.user = user;
        this.datePurchased = datePurchased;
        this.orderProductses = orderProductses;
        this.userReviewses = userReviewses;
    }

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(columnDefinition = "uuid", name="id", unique=true, nullable=false)
    public UUID getId() {
        return this.id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_purchased", nullable=false, length=26)
    public Date getDatePurchased() {
        return this.datePurchased;
    }

    public void setDatePurchased(Date datePurchased) {
        this.datePurchased = datePurchased;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="userOrders")
    public Set<OrderProducts> getOrderProductses() {
        return this.orderProductses;
    }

    public void setOrderProductses(Set<OrderProducts> orderProductses) {
        this.orderProductses = orderProductses;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="userOrders")
    public Set<UserReviews> getUserReviewses() {
        return this.userReviewses;
    }

    public void setUserReviewses(Set<UserReviews> userReviewses) {
        this.userReviewses = userReviewses;
    }

}


