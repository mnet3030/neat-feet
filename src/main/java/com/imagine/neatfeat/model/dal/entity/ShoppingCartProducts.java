package com.imagine.neatfeat.model.dal.entity;
// Generated Mar 21, 2019 12:44:38 AM by Hibernate Tools 4.3.1


import org.hibernate.annotations.GenericGenerator;

import javax.persistence.Entity;
import javax.persistence.*;
import java.util.UUID;

/**
 * ShoppingCartProducts generated by hbm2java
 */
@Entity
@Table(name="shopping_cart_products"
        ,catalog="\"ecommerce\""
        , uniqueConstraints = @UniqueConstraint(columnNames={"shopping_cart_id", "product_id"})
)
public class ShoppingCartProducts  implements com.imagine.neatfeat.model.dal.entity.Entity {


    private UUID id;
    private Coupon coupon;
    private Product product;
    private ShoppingCart shoppingCart;
    private int quantity;
    private int priceBeforeDiscount;
    private Short productDiscount;
    private Short couponDiscount;
    private Short totalDiscount;


    private UUID uuid;

    public ShoppingCartProducts() {
    }


    public ShoppingCartProducts(UUID id, Product product, ShoppingCart shoppingCart, int quantity, int priceBeforeDiscount) {
        this.id = id;
        this.product = product;
        this.shoppingCart = shoppingCart;
        this.quantity = quantity;
        this.priceBeforeDiscount = priceBeforeDiscount;
    }
    public ShoppingCartProducts(UUID id, Coupon coupon, Product product, ShoppingCart shoppingCart, int quantity, int priceBeforeDiscount, Short productDiscount, Short couponDiscount, Short totalDiscount) {
        this.id = id;
        this.coupon = coupon;
        this.product = product;
        this.shoppingCart = shoppingCart;
        this.quantity = quantity;
        this.priceBeforeDiscount = priceBeforeDiscount;
        this.productDiscount = productDiscount;
        this.couponDiscount = couponDiscount;
        this.totalDiscount = totalDiscount;
    }

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(columnDefinition = "BINARY(16)", name="id", unique=true, nullable=false)
    public UUID getId() {
        return this.id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="coupon_id")
    public Coupon getCoupon() {
        return this.coupon;
    }

    public void setCoupon(Coupon coupon) {
        this.coupon = coupon;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="product_id", nullable=false)
    public Product getProduct() {
        return this.product;
    }

    public void setProduct(Product product) {
        this.product = product;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="shopping_cart_id", nullable=false)
    public ShoppingCart getShoppingCart() {
        return this.shoppingCart;
    }

    public void setShoppingCart(ShoppingCart shoppingCart) {
        this.shoppingCart = shoppingCart;
    }


    @Column(name="quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }


    @Column(name="price_before_discount", nullable=false)
    public int getPriceBeforeDiscount() {
        return this.priceBeforeDiscount;
    }

    public void setPriceBeforeDiscount(int priceBeforeDiscount) {
        this.priceBeforeDiscount = priceBeforeDiscount;
    }


    @Column(name="product_discount")
    public Short getProductDiscount() {
        return this.productDiscount;
    }

    public void setProductDiscount(Short productDiscount) {
        this.productDiscount = productDiscount;
    }


    @Column(name="coupon_discount")
    public Short getCouponDiscount() {
        return this.couponDiscount;
    }

    public void setCouponDiscount(Short couponDiscount) {
        this.couponDiscount = couponDiscount;
    }


    @Column(name="total_discount")
    public Short getTotalDiscount() {
        return this.totalDiscount;
    }

    public void setTotalDiscount(Short totalDiscount) {
        this.totalDiscount = totalDiscount;
    }

}


