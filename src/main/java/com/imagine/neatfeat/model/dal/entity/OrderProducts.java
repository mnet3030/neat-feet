package com.imagine.neatfeat.model.dal.entity;
// Generated Apr 5, 2019 12:34:23 PM by Hibernate Tools 4.3.1


import org.hibernate.annotations.GenericGenerator;

import java.util.HashSet;
import java.util.Set;
import java.util.UUID;
import javax.persistence.*;
import javax.persistence.Entity;

/**
 * OrderProducts generated by hbm2java
 */
@Entity
@Table(name="order_products"
        ,catalog="\"ecommerce\""
        ,uniqueConstraints = @UniqueConstraint(columnNames={"user_orders_id", "product_id"})
)
public class OrderProducts  implements com.imagine.neatfeat.model.dal.entity.Entity {


    private UUID id;
    private Coupon coupon;
    private DeliveryStatus deliveryStatus;
    private Product product;
    private UserOrders userOrders;
    private int quantity;
    private int priceBeforeDiscount;
    private Short totalDiscount;
    private int totalPrice;
    private Set<UserReviews> userReviewses = new HashSet<UserReviews>(0);

    public OrderProducts() {
    }


    public OrderProducts(UUID id, DeliveryStatus deliveryStatus, Product product, UserOrders userOrders, int quantity, int priceBeforeDiscount, int totalPrice) {
        this.id = id;
        this.deliveryStatus = deliveryStatus;
        this.product = product;
        this.userOrders = userOrders;
        this.quantity = quantity;
        this.priceBeforeDiscount = priceBeforeDiscount;
        this.totalPrice = totalPrice;
    }
    public OrderProducts(UUID id, Coupon coupon, DeliveryStatus deliveryStatus, Product product, UserOrders userOrders, int quantity, int priceBeforeDiscount, Short totalDiscount, int totalPrice, Set<UserReviews> userReviewses) {
        this.id = id;
        this.coupon = coupon;
        this.deliveryStatus = deliveryStatus;
        this.product = product;
        this.userOrders = userOrders;
        this.quantity = quantity;
        this.priceBeforeDiscount = priceBeforeDiscount;
        this.totalDiscount = totalDiscount;
        this.totalPrice = totalPrice;
        this.userReviewses = userReviewses;
    }

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(columnDefinition = "BINARY(16)", name="id", unique=true, nullable=false)
    public UUID getId() {
        return this.id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="coupon_id")
    public Coupon getCoupon() {
        return this.coupon;
    }

    public void setCoupon(Coupon coupon) {
        this.coupon = coupon;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="deliver_status_id", nullable=false)
    public DeliveryStatus getDeliveryStatus() {
        return this.deliveryStatus;
    }

    public void setDeliveryStatus(DeliveryStatus deliveryStatus) {
        this.deliveryStatus = deliveryStatus;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="product_id", nullable=false)
    public Product getProduct() {
        return this.product;
    }

    public void setProduct(Product product) {
        this.product = product;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_orders_id", nullable=false)
    public UserOrders getUserOrders() {
        return this.userOrders;
    }

    public void setUserOrders(UserOrders userOrders) {
        this.userOrders = userOrders;
    }


    @Column(name="quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }


    @Column(name="price_before_discount", nullable=false)
    public int getPriceBeforeDiscount() {
        return this.priceBeforeDiscount;
    }

    public void setPriceBeforeDiscount(int priceBeforeDiscount) {
        this.priceBeforeDiscount = priceBeforeDiscount;
    }


    @Column(name="total_discount")
    public Short getTotalDiscount() {
        return this.totalDiscount;
    }

    public void setTotalDiscount(Short totalDiscount) {
        this.totalDiscount = totalDiscount;
    }


    @Column(name="total_price", nullable=false)
    public int getTotalPrice() {
        return this.totalPrice;
    }

    public void setTotalPrice(int totalPrice) {
        this.totalPrice = totalPrice;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="orderProducts")
    public Set<UserReviews> getUserReviewses() {
        return this.userReviewses;
    }

    public void setUserReviewses(Set<UserReviews> userReviewses) {
        this.userReviewses = userReviewses;
    }




}


